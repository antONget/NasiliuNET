from aiogram import Router, F, Bot
from aiogram.filters import CommandStart, StateFilter
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


from keyboards import user_keyboards as kb

from config_data.config import Config, load_config
from utils.error_handling import error_handler
from utils.send_admins import send_message_admins


import logging

router = Router()
# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é config
config: Config = load_config()


class User(StatesGroup):
    stories = State()
    helpme = State()


@router.message(CommandStart())
@error_handler
async def process_start_command_user(message: Message) -> None:
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –µ—Å–ª–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É /start
     –∏–ª–∏ –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É /user
    1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç –≤ –Ω–µ–π
    :param message:
    :return:
    """
    logging.info(f'process_start_command_user: {message.chat.id}')
    try:
        await message.edit_text(text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –¢—ã –≤ –ë–æ—Ç–µ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –î–∞–Ω–∏–ª–µ–Ω–∫–æ ‚ù§Ô∏è\n'
                                     f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–µ–ª–∏—à—å—Å—è —Å–æ –º–Ω–æ–π. –Ø –≥–æ—Ç–æ–≤–∞ –∏ —Ö–æ—á—É –ø–æ–º–æ—á—å –≤—Å–µ–º –¥–µ—Ç—è–º –∏ —É–∂–µ '
                                     f'–≤—ã—Ä–æ—Å—à–∏–º –∂–µ—Ä—Ç–≤–∞–º –Ω–∞—Å–∏–ª–∏—è. –ù–µ –±–æ–π—Å—è, –µ—Å–ª–∏ —Ç—ã –Ω–µ –∑–∞—Ö–æ—á–µ—à—å, —Ç–æ —ç—Ç–æ–≥–æ –Ω–µ —É–≤–∏–¥–∏—Ç'
                                     f' –Ω–∏–∫—Ç–æ –∫—Ä–æ–º–µ –º–µ–Ω—è.'
                                     f' –ù–∏–∂–µ –≤—ã–±–µ—Ä–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:',
                                reply_markup=kb.keyboard_start_menu())
    except:
        await message.answer(text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –¢—ã –≤ –ë–æ—Ç–µ–ü–æ–¥–¥–µ—Ä–∂–∫–∏ –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –î–∞–Ω–∏–ª–µ–Ω–∫–æ ‚ù§Ô∏è\n'
                                  f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–µ–ª–∏—à—å—Å—è —Å–æ –º–Ω–æ–π. –Ø –≥–æ—Ç–æ–≤–∞ –∏ —Ö–æ—á—É –ø–æ–º–æ—á—å –≤—Å–µ–º –¥–µ—Ç—è–º –∏'
                                  f' —É–∂–µ –≤—ã—Ä–æ—Å—à–∏–º –∂–µ—Ä—Ç–≤–∞–º'
                                  f' –Ω–∞—Å–∏–ª–∏—è. –ù–µ –±–æ–π—Å—è, –µ—Å–ª–∏ —Ç—ã –Ω–µ –∑–∞—Ö–æ—á–µ—à—å, —Ç–æ —ç—Ç–æ–≥–æ –Ω–µ —É–≤–∏–¥–∏—Ç –Ω–∏–∫—Ç–æ –∫—Ä–æ–º–µ –º–µ–Ω—è.'
                                  f' –ù–∏–∂–µ –≤—ã–±–µ—Ä–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:',
                             reply_markup=kb.keyboard_start_menu())


@router.callback_query(F.data == 'your_stories')
@error_handler
async def process_your_stories(callback: CallbackQuery, state: FSMContext) -> None:
    logging.info(f'process_your_stories: {callback.message.chat.id}')
    await callback.message.edit_text(text=f'–†–∞—Å–ø–∏—à–∏ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é —Ç–∞–∫,'
                                          f' –∫–∞–∫ —Ö–æ—á–µ—à—å —á—Ç–æ–±—ã –µ—ë —É–≤–∏–¥–µ–ª–∏ –¥—Ä—É–≥–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã.\n'
                                          f'–ù–µ –±–æ–π—Å—è, –≤ –≥—Ä—É–ø–ø–µ —Ç–µ–±—è –Ω–µ –æ—Å—É–¥—è—Ç –∏ –±—É–¥—É—Ç –∫ —Ç–µ–±–µ –¥–æ–±—Ä—ã...\n'
                                          f'–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —è –ø–æ–ª—É—á—É —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—é –≤ –≥—Ä—É–ø–ø—É –∞–Ω–æ–Ω–∏–º–Ω–æ.'
                                          f' –ò–º—è —Å–≤–æ–µ —Ç—ã –æ—Ç–∫—Ä–æ–µ—à—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —ç—Ç–æ–≥–æ ‚ù§Ô∏è',
                                     reply_markup=kb.keyboard_back())
    await state.set_state(User.stories)


@router.message(F.text, StateFilter(User.stories))
@error_handler
async def answer_your_stories(message: Message, bot: Bot, state: FSMContext) -> None:
    logging.info(f'answer_your_stories: {message.chat.id}')
    try:
        await bot.delete_message(chat_id=message.chat.id,
                                 message_id=message.message_id-1)
    except:
        pass
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å?',
                         reply_markup=kb.keyboard_your_stories())
    await state.update_data(stories=message.html_text)
    await state.set_state(state=None)


@router.callback_query(F.data == 'BACK')
@error_handler
async def process_question(callback: CallbackQuery) -> None:
    logging.info(f'process_question: {callback.message.chat.id}')
    await process_start_command_user(message=callback.message)


@router.callback_query(F.data == 'stories_send')
@error_handler
async def process_stories_send(callback: CallbackQuery, state: FSMContext, bot: Bot) -> None:
    logging.info(f'process_stories_send: {callback.message.chat.id}')
    data = await state.get_data()
    stories = data['stories']
    text = f'–ü–æ–ª—É—á–µ–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç @{callback.from_user.username}/{callback.from_user.id}\n\n' + stories
    await send_message_admins(bot=bot, text=text)
    await callback.message.answer(text=f'–Ø –ø–æ–ª—É—á–∏–ª–∞ —Ç–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é, —Å–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ ‚ù§Ô∏è',
                                  reply_markup=kb.keyboard_start_menu())


@router.callback_query(F.data == 'help_me')
@error_handler
async def process_help_me(callback: CallbackQuery, state: FSMContext) -> None:
    logging.info(f'process_help_me: {callback.message.chat.id}')
    await callback.message.edit_text(text=f'–†–∞—Å–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –æ—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–æ. –≠—Ç–æ —É–≤–∏–∂—É —Ç–æ–ª—å–∫–æ —è.'
                                          f' –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:\n'
                                          f'1. –í –∫–∞–∫–æ–º —Ç—ã –≥–æ—Ä–æ–¥–µ?\n'
                                          f'2. –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç —Å–µ–π—á–∞—Å?\n'
                                          f'3. –°–∫–æ–ª—å–∫–æ –ª–µ—Ç –±—ã–ª–æ –Ω–∞ –º–æ–º–µ–Ω—Ç —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —ç–ø–∏–∑–æ–¥–∞ –Ω–∞—Å–∏–ª–∏—è'
                                          f' –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ?\n'
                                          f'4. –ö–∞–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–µ–π—á–∞—Å —Ç–µ–±–µ –≥—Ä–æ–∑–∏—Ç?\n'
                                          f'5. –°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏ —Å —Ç–æ–±–æ–π (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –í–ö –∏ —Ç–¥)\n'
                                          f'–ú–Ω–µ –≤–∞–∂–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–µ—Å—Ç–Ω–æ—Å—Ç—å ‚ù§Ô∏èÔ∏è',
                                     reply_markup=kb.keyboard_back())
    await state.set_state(User.helpme)


@router.message(F.text, StateFilter(User.helpme))
@error_handler
async def answer_helpme(message: Message, bot: Bot, state: FSMContext) -> None:
    logging.info(f'answer_helpme: {message.chat.id}')
    try:
        await bot.delete_message(chat_id=message.chat.id,
                                 message_id=message.message_id-1)
    except:
        pass
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å?',
                         reply_markup=kb.keyboard_your_helpme())
    await state.update_data(helpme=message.html_text)
    await state.set_state(state=None)


@router.callback_query(F.data == 'helpme_send')
@error_handler
async def process_stories_send(callback: CallbackQuery, state: FSMContext, bot: Bot) -> None:
    logging.info(f'process_stories_send: {callback.message.chat.id}')
    data = await state.get_data()
    helpme = data['helpme']
    text = f'–ü–æ–ª—É—á–µ–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç @{callback.from_user.username}/{callback.from_user.id}\n\n' + helpme
    await send_message_admins(bot=bot, text=text)
    await callback.message.answer(text=f'–Ø –ø–æ–ª—É—á–∏–ª–∞ —Ç–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!'
                                       f' –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ ‚ù§Ô∏è',
                                  reply_markup=kb.keyboard_start_menu())


@router.callback_query(F.data == 'contacts')
@error_handler
async def process_contacts(callback: CallbackQuery) -> None:
    logging.info(f'process_contacts: {callback.message.chat.id}')
    await callback.message.answer(text=f'‚òîÔ∏è –ö—É–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é:\n\n'
                                       f'<a href="https://nasiliu.net">*–ù–∞—Å–∏–ª–∏—é.–Ω–µ—Ç*</a>\n\n'
                                       f'<a href="https://verimtebe.ru/consultations">*–¢–ï–ë–ï –ü–û–í–ï–†–Ø–¢*</a>\n\n'
                                       f'<a href="https://crisiscenter.ru">*–ò–ù–ì–û –∫—Ä–∏–∑–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–ª—è –∂–µ–Ω—â–∏–Ω*</a>\n\n'
                                       f'üí´  –ó–∞–ø—Ä–æ—Å –∫ –Ω–∞—á–∏–Ω–∞—é—â–∏–º —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞–º –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'
                                       f' <a href="https://vk.com/idnatali1811">–ù–∞—Ç–∞–ª—å–µ</a>\n\n'
                                       f'üí´  <a href="https://vk.com/topic-212684860_49313719">'
                                       f'–ü—Å–∏—Ö–æ–ª–æ–≥, –≥–µ—à—Ç–∞–ª—å—Ç-—Ç–µ—Ä–∞–ø–µ–≤—Ç, –ø–ª–∞—Ç–Ω–æ</a>\n\n',
                                  reply_markup=kb.keyboard_thanks())
    await callback.answer()
